/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

Xmin 0.0; 
Xmax 1.0;
Ymin 0;
Ymax 0.5;
Zmin 0.0;
Zmax 0.1;

x0 $Xmin;
x1 $Xmax;
x2 $Xmax;
x3 $Xmin;

y0 $Ymin;
y1 $Ymin;
y2 $Ymax;
y3 $Ymax;


vertices
(
    ($x0 $y0 $Zmin)
    ($x1 $y1 $Zmin)
    ($x2 $y2 $Zmin)
    ($x3 $y3 $Zmin)

    ($x0 $y0 $Zmax)
    ($x1 $y1 $Zmax)
    ($x2 $y2 $Zmax)
    ($x3 $y3 $Zmax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (30 20 1) //simpleGrading (1 1 1)
    simpleGrading  
    (
		// expansión sobre el eje-x
		// (0.2 0.25 8) // (%bloque %celdas coeficiente)
		// (0.6 0.5 1) // (%bloque %celdas coeficiente)
		// (0.2 0.25 0.125) // (%bloque %celdas coeficiente)
        1
        // expansión sobre el eje-y
        (
            (0.2 0.2 1) // (%bloque %celdas coeficiente)
            (0.3 0.3 8) // (%bloque %celdas coeficiente)
            (0.3 0.3 0.125) // (%bloque %celdas coeficiente)
            (0.2 0.2 1) // (%bloque %celdas coeficiente)
        )

		// expansión sobre el eje-z
		1
	) 
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 2 6 5)
        );
    }

    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }

    bot
    {
        type wall;
        faces
        (
            (0 4 5 1)
        );
    }

    front
    {
        type empty;
        faces
        (
            (4 5 6 7)
        );
    }

    back
    {
        type empty;
        faces
        (
            (0 1 2 3)
        );
    }

);

mergePatchPairs
(
);


// ************************************************************************* //
